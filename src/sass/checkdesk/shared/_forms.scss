// Checkdesk Forms

%form-drag-and-drop {
  .views-row.ui-draggable-dragging .views-row,
  .views-row.ui-draggable:hover .views-row {
    background-color: $postit-yellow;
    cursor: move;
    @include shadow;
  }
  // The drop indicator
  .ui-droppable {
    float: $from-direction;
    // it must be floated to contain droppable form elements.
    width: 100%;
    // ... thus this must be set since it must be floated.
    padding: 0;
    //  ... thus we can have no padding
 
  }
  .ui-droppable.drop-hover textarea {
    background-color: rgba($twitter-blue, 0.02);
    border-color: rgba($twitter-blue, 0.9);
  }
}

// ===================================================================
// Form actions
//
%form-actions {
  .form-actions {
    margin-top: $gutter-width;
    border-top: 0 none;
    input,
    a {
      @include button(rgba($firefly, 0.4));
      &:hover {
        @include button(rgba($firefly, 0.6));
      }
    }
  }
  // De-emphasized buttons
  // input#edit-reset, 
  // input#edit-draft, 
  // input[type="reset"] {
  //   @include button(rgba($firefly, 0.05));
  //   color: $firefly40;
  // }
  // Buttons
  #edit-submit,
  .form-submit {
    @include button;
  }
  // Disabled buttons
  input:disabled {
    @include disable-button;
  }
}

// ===================================================================
// Inline form errors
//
@mixin form-inline-errors {
  @include sans-serif-family;
  // hide labels for forms with ife
  &.ife {
    label {
      display: none;
    }
    .form-type-checkbox,
    .form-type-radio {
      label {
        display: inline-block;
      }
    }
    // unless it is a select field
    .form-type-select {
      @extend %clearfix;
      label {
        display: inline-block;
        float: $alpha;
        margin-#{$omega}: $gutter-width;
        line-height: $absolute-line-height;
        padding-top: $absolute-line-height / 3;
      }
      select {
        float: $alpha;
        @include span-columns($total-columns / 2);
      }
    }
  }
  // Show labels on login form
  #user-login label {
    display: block;
  }
  // Registration form
  #user-register-form {
    padding-right: 0;
    padding-left: 0;
    width: 100%;
    label {
      display: block;
      clear: both;
      span {
        color: $firefly30;
        font-size: $small-font-size;
      }
    }
    input[type=text],
    input[type=password] {
      margin-top: 0;
      width: 80%;
      &.success {
        border-color: $success-text;
      }
    }
    .form-item {
      position: relative;
      clear: both;
    }
    label.danger,
    label.error,
    label.success {
      position: absolute;
      #{$from-direction}: 80%;
      padding-#{$from-direction}: $gutter-width;
      line-height: $absolute-line-height * 1.5;
      width: 30%;
      background: transparent;
    }
    label.danger,
    label.error {
      color: $error-text;
    }
    label.success {
      color: $success-text;
    }
    .recaptcha_input_area label {
      top: $absolute-line-height * 1.5;
      text-align: $from-direction;
    }
    div.password-confirm {
      display: none;
    }
    .recaptchatable {
      width: 80% !important;
    }
    .recaptcha_input_area {
      position: static !important;
    }
  }
  .messages-inline {
    background: none;
    border: 0 none;
    display: inline-block;
    margin: 0;
    padding: 0;
    padding-bottom: $absolute-line-height / 2;
    font-size: $small-font-size;
    line-height: 1.4;
  }
}

// do not hide labels for report edit form
.page-node-edit form.node-media-form {
  label {
    display: inline-block;
  }
  input[type="text"],
  textarea {
    margin-top: 0;
  }
}

// In addition to our use of normalize, and other resets, 
// This standardizes form elements
// #review why so many resets? CGB
//
%form-standardize {
  label,
  input,
  button,
  select,
  textarea,
  body.cke_editable {
    font-size: $small-font-size;
  }
  // Everything else
  textarea,
  body.cke_editable,
  input[type="text"],
  input[type="password"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="date"],
  input[type="month"],
  input[type="time"],
  input[type="week"],
  input[type="number"],
  input[type="email"],
  input[type="url"],
  input[type="search"],
  input[type="tel"],
  input[type="color"],
  input[type="text"],
  .uneditable-input {
    background-color: $input-background;
    border: 1px solid $input-border;
    @include box-shadow(rgba($firefly, 0.075) 0 1px 1px inset);
    @include transition(#{border linear 0.2s, box-shadow linear 0.2s});
    // Focus state
    &:focus {
      border-color: rgba($facebook-blue, 0.8);
      outline: 0;
    }
  }
  // Make select elements obey height by applying a border
  select {
    // default input width + 10px of padding that doesn't get applied
    width: 220px;
    border: 1px solid $input-border;
    // Chrome on Linux and Mobile Safari need background-color
    background-color: $input-background;
  }
  // Make multiple select elements height not fixed
  select[multiple],
  select[size] {
    height: auto;
  }
  // Focus for select, file, radio, and checkbox
  select:focus,
  input[type="file"]:focus,
  input[type="radio"]:focus,
  input[type="checkbox"]:focus {
    @extend %tab-focus;
  }
}

%form-styles-except-layout {
  @extend %form-actions;
  @extend %form-drag-and-drop;
  @include form-inline-errors;
  input[type="password"],
  input[type="text"],
  textarea {
    @include sans-serif-family;
    @include border-radius(3px);
    display: block;
    line-height: $base-line-height;
    background-color: $input-background;
    border: 1px solid $grey;
    margin-top: $gutter-width;
    // focus state
    &:focus {
      border-color: rgba(black, 0.5);
      outline: thin dotted $firefly30;
    }
  }
  textarea {
    height: 250px;
  }
  // starting height
  // set textarea height under
  .cke_contents {
    max-height: 250px !important;
  }
  // checkboxes and radios
  input[type="checkbox"],
  input[type="radio"] {
    width: $checkbox-width;
    display: inline-block;
    clear: both;
    float: $from-direction;
  }
  // When we start writing make it bright
  input:focus,
  textarea:focus,
  body.cke_editable:focus {
    background-color: white;
  }
  // Default labels
  label {
    font-size: $small-font-size;
    display: inline-block;
    font-weight: normal;
    padding {
      top: $gutter-width;
      bottom: $gutter-width;
    }
    &[for="edit-pass"] {
      a {
        padding: $gutter-width;
        font-size: $small-font-size;
        color: $grey;
        font-weight: normal;
      }
    }
  }
  // Default descriptions
  .description {
    font-size: $small-font-size !important;
    color: $firefly30 !important;
    width: 100%;
  }
  // Confirmation Form Actions: Confirm delete node
  &.confirmation {
    .form-actions input {
      // Red delete button
      @include button($firetruck-red);
    }
  }
}

// Checkdesk form layouts
//
@mixin form-layout($form-width, $context, $gutter-width: $gutter-width) {
  form {
    & > .form-item {
      // @include span-columns($form-width, $form-width);
      // Nested <.form-item>s
      .form-item {
        // @include span-columns($form-width, $form-width);
     
      }
    }
    // Default main inputs and textareas
    input[type="password"],
    input[type="text"],

    textarea {
      font-family: $sans-serif-font-stack;
      // @include span-columns($form-width, $form-width);
      @include box-sizing(border-box);
      padding-top: $gutter-width / 2;
      padding-bottom: $gutter-width / 2;
      height: auto !important;
    }
    // image field
    .image-widget {
      @include border-radius(3px);
      display: block;
      margin-top: $gutter-width;
      .image-preview {
        display: inline-block;
        margin-#{$omega}: $gutter-width;
      }
      .image-widget-data {
        display: inline-block;
      }
      input[type="file"] {
        @include reset-box-model;
        display: inline-block;
        margin-#{$omega}: $gutter-width;
        padding: 0 $gutter-width;
        background-color: $firefly5;
        @include sans-serif-family;
        font-size: $small-font-size;
        vertical-align: middle;
        @include border-radius(3px);
      }
      input[type="submit"] {
        margin-bottom: $absolute-line-height / 2;
        margin-#{$omega}: 0;
      }
    }
    select {
      // @include span-columns($form-width, $form-width);
      @extend %clearfix;
      float: none;
      @include sans-serif-family;
    }
    div.form-wrapper {
      clear: both;
      margin: $absolute-line-height / 2 0;
    }
    .form-type-textarea {
      @extend %clearfix;
      margin-bottom: $absolute-line-height / 2;
    }
  }
}

body {
  @extend %form-standardize;
  @extend %form-styles-except-layout;
  @include form-layout($container-width, $container-width, $gutter-width);
}